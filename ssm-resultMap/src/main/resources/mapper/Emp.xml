<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tedu.java.dao.EmpDao">
    <!--字段名和属性名不一致的情况,如何处理映射关系?
    1. 为查询字段设置别名,和属性名保持一致。
    2. 当字段符合Mysql的要求使用_,而属性符合java的要求使用驼峰,
    此时可以在mybatis的核心配置文件设置一个全局配置,可以自动将_变为驼峰命名.
    3. 使用resultMap自定义映射
    resultMap:来设置自定义映射关系
    id:唯一标识
    type：处理映射关系的实体类的类型
    常用的标签:
    id ：处理主键和实体类的属性的映射关系.
    result:处理普通字段和实体类中属性的映射关系.
    column:设置映射关系中的字段名,必须是SQL查询的字段名.
    property:设置映射关系中的属性的属性名,必须是处理的实体类类型中的属性名.
    -->
    <resultMap id="EmpResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
    </resultMap>
    <select id="getEmpGetEmpId" resultMap="EmpResultMap">
        select * from t_emp where emp_id=#{empId}
    </select>
    <!--<select id="getEmpGetEmpId" resultType="com.tedu.java.pojo.Emp">
        select * from t_emp where emp_id=#{empId}
    </select>-->
    <!--
    resultMap自定义映射处理
    处理多对一的映射关系:
    1. 级联
    2. association:处理多对一的映射关系(处理实体类类型的属性)
    property:设置需要处理映射关系的属性的属性名.
    javaType:设置需要处理的属性的类型
    3. 分步查询
    -->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <result column="dept_id" property="dept.deptId"></result>
        <result column="dept_name" property="dept.deptName"></result>
    </resultMap>
    <resultMap id="empAndDeptResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"></id>
            <result column="dept_name" property="deptName"></result>
        </association>
    </resultMap>
    <select id="getEmpAndDept" resultMap="empAndDeptResultMap">
        select
        A.*,
        B.*
        from t_emp A
        left join t_dept B on A.dept_id=B.dept_id
        where A.emp_id =#{empId}
    </select>
    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <!--
        property：设置需要处理映射关系的属性的属性名.
        select:设置分步查新的sql的唯一标识.
        column:设置分步查询的sql条件.
        fetchType:在开启了延迟加载的环境中,通过该属性设置当前分步是否使用延迟加载
                eager-立即加载   lazy-延迟加载
        -->
        <association property="dept"
                select="com.tedu.java.dao.DeptDao.getEmpDeptByStepTwo"
                column="dept_id"
        fetchType="eager">
            <id column="dept_id" property="deptId"></id>
            <result column="dept_name" property="deptName"></result>
        </association>
    </resultMap>
    <select id="getEmpAndDeptStepOne" resultMap="empAndDeptByStepResultMap">
        select * from t_emp where emp_id=#{empId}
    </select>
    <select id="getDeptAndEmpStepTwo" resultType="com.tedu.java.pojo.Emp">
        select * from t_emp where dept_id=#{deptId}
    </select>
</mapper>